<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>COOLGuysneverSleep</title>
  
  
  <link href="https://heimdall-nss.github.io/atom.xml" rel="self"/>
  
  <link href="https://heimdall-nss.github.io/"/>
  <updated>2021-09-04T13:47:57.188Z</updated>
  <id>https://heimdall-nss.github.io/</id>
  
  <author>
    <name>NENEIIII</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Vercel初体验记录</title>
    <link href="https://heimdall-nss.github.io/2021/09/04/vercel/"/>
    <id>https://heimdall-nss.github.io/2021/09/04/vercel/</id>
    <published>2021-09-04T07:59:41.000Z</published>
    <updated>2021-09-04T13:47:57.188Z</updated>
    
    <content type="html"><![CDATA[<h1 id="不要钱，比github快？拿来吧你"><a href="#不要钱，比github快？拿来吧你" class="headerlink" title="不要钱，比github快？拿来吧你"></a>不要钱，比github快？拿来吧你</h1><p>咱们前端小白一个，摸索的比较艰辛。。。其它优化的方式还没有搞，不过我觉得移植过来之后确实快了一些，比如之前总是加载不出来banner图</p><h1 id="配置过程遇到的问题记录"><a href="#配置过程遇到的问题记录" class="headerlink" title="配置过程遇到的问题记录"></a>配置过程遇到的问题记录</h1><h2 id="怎么删除项目"><a href="#怎么删除项目" class="headerlink" title="怎么删除项目"></a>怎么删除项目</h2><p>哈哈，好瓜的问题，但确实让我狠找了一会。】【、</p><p>具体步骤：</p><ol><li>点进待删除项目内页</li><li>点击左上方的<button>setting</button></li><li>点击左侧选项列表最后的<button>Advanced</button></li><li>滑动到最下面找到<kbd><font color="red">Delete</font></kbd></li></ol><h2 id="配置了自己的域名怎么访问不了"><a href="#配置了自己的域名怎么访问不了" class="headerlink" title="配置了自己的域名怎么访问不了"></a>配置了自己的域名怎么访问不了</h2><p>我查看了[帮助文档](<a href="https://vercel.com/docs/custom-domains">Custom Domains – Vercel Docs</a>)</p><p>明明已经配置好了：<img src="/2021/09/04/vercel/image-20210904161835225.png" class title="image-20210904161835225"></p><h2 id="项目名不要随便改，不然下次更新就会建一个新的"><a href="#项目名不要随便改，不然下次更新就会建一个新的" class="headerlink" title="项目名不要随便改，不然下次更新就会建一个新的"></a>项目名不要随便改，不然下次更新就会建一个新的</h2><p>因为我是用的自动化部署<code>vercel --prod --confirm</code>所以项目名就是public，我修改之后再部署就会生成一个新的，（之前有讲可以配置一个js文件但好像有点问题算了不搞了）</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;不要钱，比github快？拿来吧你&quot;&gt;&lt;a href=&quot;#不要钱，比github快？拿来吧你&quot; class=&quot;headerlink&quot; title=&quot;不要钱，比github快？拿来吧你&quot;&gt;&lt;/a&gt;不要钱，比github快？拿来吧你&lt;/h1&gt;&lt;p&gt;咱们前端小白一个，摸索的比较艰辛。。。其它优化的方式还没有搞，不过我觉得移植过来之后确实快了一些，比如之前总是加载不出来banner图&lt;/p&gt;
&lt;h1 id=&quot;配置过程遇到的问题记录&quot;&gt;&lt;a href=&quot;#配置过程遇到的问题记录&quot; class=&quot;headerlink&quot; title=&quot;配置过程遇到的问题记录&quot;&gt;&lt;/a&gt;配置过程遇到的问题记录&lt;/h1&gt;&lt;h2 id=&quot;怎么删除项目&quot;&gt;&lt;a href=&quot;#怎么删除项目&quot; class=&quot;headerlink&quot; title=&quot;怎么删除项目&quot;&gt;&lt;/a&gt;怎么删除项目&lt;/h2&gt;&lt;p&gt;哈哈，好瓜的问题，但确实让我狠找了一会。】【、&lt;/p&gt;
&lt;p&gt;具体步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;点进待删除项目内页&lt;/li&gt;
&lt;li&gt;点击左上方的&lt;button&gt;setting&lt;/button&gt;&lt;/li&gt;
&lt;li&gt;点击左侧选项列表最后的&lt;button&gt;Advanced&lt;/button&gt;&lt;/li&gt;
&lt;li&gt;滑动到最下面找到&lt;kbd&gt;&lt;font color=&quot;red&quot;&gt;Delete&lt;/font&gt;&lt;/kbd&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;配置了自己的域名怎么访问不了&quot;&gt;&lt;a href=&quot;#配置了自己的域名怎么访问不了&quot; class=&quot;headerlink&quot; title=&quot;配置了自己的域名怎么访问不了&quot;&gt;&lt;/a&gt;配置了自己的域名怎么访问不了&lt;/h2&gt;&lt;p&gt;我查看了[帮助文档](&lt;a href=&quot;https://vercel.com/docs/custom-domains&quot;&gt;Custom Domains – Vercel Docs&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;明明已经配置好了：&lt;img src=&quot;/2021/09/04/vercel/image-20210904161835225.png&quot; class title=&quot;image-20210904161835225&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="博客搭建" scheme="https://heimdall-nss.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="vercel" scheme="https://heimdall-nss.github.io/tags/vercel/"/>
    
    <category term="代码托管" scheme="https://heimdall-nss.github.io/tags/%E4%BB%A3%E7%A0%81%E6%89%98%E7%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>暑期系列：操作系统</title>
    <link href="https://heimdall-nss.github.io/2021/09/04/os/"/>
    <id>https://heimdall-nss.github.io/2021/09/04/os/</id>
    <published>2021-09-04T01:40:24.000Z</published>
    <updated>2021-09-04T01:49:03.887Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-os概述"><a href="#1-os概述" class="headerlink" title="1 os概述"></a>1 os概述</h2><ul><li>功能</li></ul><pre><code>    用户接口    文件管理    存储器管理    处理机管理    设备管理</code></pre><ul><li>特征</li></ul><pre><code>    并发：一段时间 多道程序 宏观同时    虚拟：一个物理--&gt;多个逻辑 多个物理--&gt;一个逻辑    共享：互斥共享 "同时"共享    异步(不确定性)：[执行顺序] [执行时间]</code></pre><ul><li>CPU执行状态</li></ul><pre><code>操作系统执行在核心态下原语执行在核心态下用户程序执行在用户态下</code></pre><h2 id="2-处理机管理"><a href="#2-处理机管理" class="headerlink" title="2 处理机管理"></a>2 处理机管理</h2><ul><li>进程与线程</li></ul><pre><code>    进程：系统资源分配的基本单位    线程：独立调度的基本单位 共享资源有：**sds*</code></pre><blockquote><p>进程五态<img src="/2021/09/04/os/image-20210813132505956.png" alt="image-20210813132505956" style="zoom:50%;"></p></blockquote><ul><li><p>进程控制<br>实现手段：进程控制原语<br>功能：创建、撤销进程，进程的状态转换</p></li><li><p>进程同步机制<br>目的：保证进程间的两种制约关系</p><ol><li><p>同步：多进程<strong>合作完成</strong>任务时要按照一定的时序执行</p></li><li><p>互斥：多个进程访问<strong>共享资源</strong>时要保证互斥</p></li></ol><p>原则：</p><ol><li><p>空闲让进</p></li><li><p>忙则等待</p></li><li><p>有限等待</p></li><li><p>让权等待</p></li></ol><p>信号量机制</p><ol><li><p>整数型<img src="/2021/09/04/os/image-20210813140742705.png" alt="image-20210813140742705" style="zoom: 33%;"></p></li><li><p>记录型<img src="/2021/09/04/os/image-20210813141014601.png" alt="image-20210813141014601" style="zoom:33%;"></p></li></ol></li><li><p>PV操作[^ 原理见OneNote-OS-进程管理-进程同步机制]</p></li></ul><blockquote><p>生产者-消费者问题(有界缓冲区)<br>读者-写者问题<br>哲学家就餐问题<br>睡眠理发师问题</p></blockquote><ul><li>进程通信</li></ul><pre><code>    低级通信：信息量少(如用来同步发送的信号量)    高级通信：共享存储器(剪切板) 消息传递(mail like) 管道通信(2个之间)</code></pre><ul><li>进程调度</li></ul><pre><code>    FCFS    SJF    SRTF  - 抢    HRRF    HPF  - 抢    RR   - 抢    MFQ</code></pre><ul><li>死锁</li></ul><pre><code>    两个或多个进程被无限期地阻塞、相互等待    必须同时满足：互斥 请求与保持 不剥夺 环路等待    预防与避免</code></pre><ul><li>银行家算法–死锁避免</li></ul><pre><code>见OneNote-每日快速笔记-os答疑-第一问</code></pre><h2 id="3-存储器管理"><a href="#3-存储器管理" class="headerlink" title="3 存储器管理"></a>3 存储器管理</h2><blockquote><p>概念区分</p></blockquote><pre><code>物理地址空间（或物理空间、绝对空间）：由内存一系列存储单元所限定的地址范围；逻辑地址空间（用户编程空间）：由程序中逻辑地址组成的地址范围相对地址（或逻辑地址）：用户程序经编译之后的每个目标模块都从0开始顺序编址，这种用户编程所用的地址称为相对地址或逻辑地址绝对地址（或物理地址、内存地址）：内存是由若干存贮单元组成的，每个存贮单元有一个编号称为物理地址。地址变换（重定位）：把逻辑地址转换为相应物理地址的过程</code></pre><blockquote><p>程序如何装入内存：编译-&gt;链接-&gt;装入</p></blockquote><ol><li>三种链接方式 : 链接程序将目标程序和所需库函数链接在一起，形成完整的<strong>装入模块</strong></li></ol><pre><code>静态链接：事先链接完后不再拆开装入时动态链接：边装入边链接，发生一个外部模块调用后装入程序再去找相应模块装入内存运行时动态链接：执行时，发现调用的模块未装入内存时OS立即去找再装入内存，并把它链接到调用者模块上</code></pre><ol start="2"><li>三种装入方式 : 装入程序将装入模块装入内存——涉及<strong>地址转换(重定位)</strong></li></ol><pre><code>绝对装入：编译时就可给出物理地址，在装入时不用再转换地址（只有单道程序才行）可重定位装入：静态重定位，装入时进行地址转换，且不再更改动态运行时装入：动态重定位，装入内存时不转换地址(指令地址寄存器还无地址)直至CPU来执行。允许程序在内存中移动</code></pre><blockquote><p>内存分配</p></blockquote><hr><p>连续分配：单一连续 固定分区 动态分区[分配算法]<br>离散分配：<a href="https://lixiang.blog.csdn.net/article/details/119214282">分页 分段</a><br>虚拟存储：具有请求调入功能和置换功能</p><hr><blockquote><p>页面分配 页面置换算法</p></blockquote><pre><code>    分配:最开始为进程分配多少物理块        - 固定：平均 比例(大小) 优先权        - 可变：预分配 最小物理块    置换：最佳 FIFO LRU Clock LFU    </code></pre><blockquote><p>区分：os的缓存与CPU的缓存<br>    - 快表：地址映射机制中<br>    - 高速缓存：位于CPU和内存之间</p></blockquote><h2 id="4-文件管理-重点看这里"><a href="#4-文件管理-重点看这里" class="headerlink" title="4 文件管理[^ 重点看这里]"></a>4 文件管理[^ 重点看这里]</h2><ul><li><p>文件和文件系统</p><h5 id="文件：文件名、内容、属性-文件类型、长度、位置、建立时间"><a href="#文件：文件名、内容、属性-文件类型、长度、位置、建立时间" class="headerlink" title="文件：文件名、内容、属性[文件类型、长度、位置、建立时间]"></a>文件：文件名、内容、属性[文件类型、长度、位置、建立时间]</h5><p><mark>基本内容和属性信息被存储在存储器中</mark>,用户通过文件名来访问相应文件</p><h5 id="文件系统：OS中管理文件的那部分软件-管理的文件-文件属性"><a href="#文件系统：OS中管理文件的那部分软件-管理的文件-文件属性" class="headerlink" title="文件系统：OS中管理文件的那部分软件+管理的文件+文件属性"></a>文件系统：OS中管理文件的那部分软件+管理的文件+文件属性</h5></li><li><p>文件的逻辑结构：文件在用户面前所呈现的形式</p><ol><li><p>无结构文件–字符流式文件</p></li><li><p>有结构文件–记录式文件</p><blockquote><p>顺序文件: 按某种顺序排列形成的文件</p></blockquote><blockquote><p>索引文件：建立一张索引表，每个记录在表中对应一个索引项，索引项按照记录中的某个关键字域排序<img src="/2021/09/04/os/image-20210817154306671.png" class title="image-20210817154306671"></p></blockquote><blockquote><p>索引顺序文件： 将顺序文件中的所有记录分为若干组，每组的第一个记录在索引表中有对应表项，查找任意记录时，先据关键字查索引表（此时可采用各种查找算法），找到所在组的第一个记录，之后顺序查找该组。<img src="/2021/09/04/os/image-20210817154445255.png" class title="image-20210817154445255"></p></blockquote></li></ol></li><li><p>物理结构：文件在<strong>外存</strong>上的存储组织形式</p><ol><li><p>磁带文件：磁带只能顺序访问(也即只有顺序结构)</p></li><li><p>磁盘文件：顺序存取、随机存取</p><blockquote><p>连续分配–顺序式文件结构–&gt;可采用顺序存取，也可以随机存取</p><p>链接分配–链接式文件结构–&gt;隐式链接文件结构[^ 每个物理块<strong>自身</strong>存放下一物理块的链接指针]只能只能顺序存取，不能随机存取；显式链接文件结构[^ 各物理块指针显式地放在内存的一张表格FAT中]能顺序存取，能随机存取</p><p>索引分配–索引式文件结构–&gt;可顺序存取，也可随机存取</p></blockquote></li></ol></li><li><p>文件目录：一种数据结构，标识文件及其物理地址</p><h5 id="两种结构"><a href="#两种结构" class="headerlink" title="两种结构"></a>两种结构</h5><ol><li>含索引节点[指向文件对应的描述信息节点]<img src="/2021/09/04/os/image-20210817153244643.png" alt="image-20210817153244643" style="zoom:45%;"></li><li>hash方法<img src="/2021/09/04/os/image-20210817153505139.png" alt="image-20210817153505139" style="zoom:50%;"></li></ol></li><li><p>文件共享：指系统应允许多个用户(进程)共享同一份文件。这样，在系统中只需保留该共享文件的一份副本</p><blockquote><p> 在文件目录中只设置文件名及指向相应索引结点的指针<img src="/2021/09/04/os/image-20210817153757724.png" alt="image-20210817153757724" style="zoom:33%;"></p></blockquote></li></ul><h2 id="5-设备管理"><a href="#5-设备管理" class="headerlink" title="5 设备管理"></a>5 设备管理</h2><ul><li><p>I/O设备</p><ol><li><p>从交换单位看——</p><ol><li>字符设备：传输单位&lt;字节&gt; ，不可寻址<br> 如：显示终端、键盘、打印机、异步通讯接口</li><li>块设备：传输单位&lt;数据块&gt; ，可寻址<br> 如：磁盘(一个扇区)、摄像头(一帧)</li></ol></li><li><p>从使用方式看——</p><pre><code>i. 独占设备：打印机ii. 共享设备：磁带、磁盘iii. 虚拟设备：模拟独占设备的那部分共享设备的空间</code></pre></li></ol></li><li><p>设备管理的作用(功能)</p><ol><li>对设备的分配和回收</li><li>对设备的控制</li><li>管理缓冲区，平衡低速设备和高速处理器</li><li>实现虚拟设备，提高并发度</li></ol></li><li><p>I/O系统的层次结构</p><img src="/2021/09/04/os/image-20210904094814100.png" class title="image-20210904094814100"></li><li><p>设备控制方式：也即CPU与设备的并行方式</p><ol><li><p>程序直接控制：不断查询I/O控制器状态，就绪才进行下一步 </p><p>【CPU全程参与】</p></li><li><p>中断驱动：例如–&gt;在输入时，当设备控制器收到CPU发来的读命令后，便去控制相应的输入设备读数据。一旦数据进入数据寄存器，控制器便通过控制线向CPU发送一中断信号，由CPU检查输入过程中是否出错，若无错，便向控制器发送取走数据的信号，然后再通过控制器及数据线，将数据写入内存指定单元中 </p><p>【CPU只参与中断处理】</p><p>【中断频率：每个字节传输完都要中断】</p></li><li><p>DMA驱动：DMAC直接与内存相连，与CPU分时复用内存，CPU只需驱动DMA然后数据控制全程在DMA控制下进行，结束时再向CPU发中断</p><img src="/2021/09/04/os/image-20210825114618914.png" alt="image-20210825114618914" style="zoom:50%;"><p>【CPU工作时间：启动DMA，结束时处理中断】</p><p>【中断频率：一次I/O指令能读写一个连续的数据块】</p></li><li><p>通道方式：是DMA方式的发展，把以数据块为单位的干预，减少到对一组数据块为单位的干预</p><p>【CPU同样工作在开始和结束】</p><p>【中断频率：一条I/O指令可以读写多个离散的数据块且将它们分别传送到不同的内存区域】</p></li></ol><img src="/2021/09/04/os/image-20210825115627372.png" alt="image-20210825115627372" style="zoom:50%;"></li><li><p>设备的分配</p><ol><li>算法：先来先服务 || 优先级高者优先</li></ol></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;1-os概述&quot;&gt;&lt;a href=&quot;#1-os概述&quot; class=&quot;headerlink&quot; title=&quot;1 os概述&quot;&gt;&lt;/a&gt;1 os概述&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;功能&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;    用户接口
    文件管理
    存储器管理
    处理机管理
    设备管理
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;特征&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;    并发：一段时间 多道程序 宏观同时
    虚拟：一个物理--&amp;gt;多个逻辑 多个物理--&amp;gt;一个逻辑
    共享：互斥共享 &quot;同时&quot;共享
    异步(不确定性)：[执行顺序] [执行时间]
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;CPU执行状态&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;操作系统执行在核心态下
原语执行在核心态下
用户程序执行在用户态下
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;2-处理机管理&quot;&gt;&lt;a href=&quot;#2-处理机管理&quot; class=&quot;headerlink&quot; title=&quot;2 处理机管理&quot;&gt;&lt;/a&gt;2 处理机管理&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;进程与线程&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;    进程：系统资源分配的基本单位
    线程：独立调度的基本单位 共享资源有：**sds*
&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="操作系统" scheme="https://heimdall-nss.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="暑期系列" scheme="https://heimdall-nss.github.io/tags/%E6%9A%91%E6%9C%9F%E7%B3%BB%E5%88%97/"/>
    
    <category term="专业课" scheme="https://heimdall-nss.github.io/tags/%E4%B8%93%E4%B8%9A%E8%AF%BE/"/>
    
    <category term="操作系统" scheme="https://heimdall-nss.github.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>暑期系列：数据库杂七杂八</title>
    <link href="https://heimdall-nss.github.io/2021/09/02/database/"/>
    <id>https://heimdall-nss.github.io/2021/09/02/database/</id>
    <published>2021-09-02T09:33:22.000Z</published>
    <updated>2021-09-02T09:42:14.900Z</updated>
    
    <content type="html"><![CDATA[<p>写在<a href="%E6%9C%AC%E7%AF%87%E5%8F%AA%E8%AE%B0%E5%BD%95%E4%B8%80%E4%BA%9B%E4%B8%AA%E4%BA%BA%E9%9C%80%E8%A6%81%E7%9A%84%E7%82%B9%EF%BC%8C%E4%B8%8D%E6%98%AF%E5%AE%8C%E6%95%B4%E7%9A%84%E7%9F%A5%E8%AF%86%E6%A1%86%E6%9E%B6">^ 前面</a></p><h1 id="并发控制"><a href="#并发控制" class="headerlink" title="并发控制"></a>并发控制</h1><h3 id="并发可能导致的三种不一致状态"><a href="#并发可能导致的三种不一致状态" class="headerlink" title="并发可能导致的三种不一致状态"></a>并发可能导致的三种不一致状态</h3><ol><li><p>丢失修改</p><blockquote><p>写-写</p><img src="/2021/09/02/database/image-20210830125324058.png" class title="image-20210830125324058"><p>两个事务T2和T2读入同一数据并修改，T2的提交结果破坏了T1提交的结果，导致T1的修改被丢失</p></blockquote></li><li><p>不可重复读</p><blockquote><p>读-修改</p><img src="/2021/09/02/database/image-20210830125511047.png" alt="image-20210830125511047" style="zoom:50%;"><p>读-删除</p><img src="/2021/09/02/database/image-20210830125646645.png" class title="image-20210830125646645"><p>读-插入</p><img src="/2021/09/02/database/image-20210830125659642.png" class title="image-20210830125659642"></blockquote></li><li><p>读脏数据</p><blockquote><p>修改-读</p><img src="/2021/09/02/database/image-20210830125759968.png" class title="image-20210830125759968"><img src="/2021/09/02/database/image-20210830162152749.png" class title="image-20210830162152749"></blockquote></li></ol><h3 id="并发控制：正确调度并发操作，避免造成不一致性"><a href="#并发控制：正确调度并发操作，避免造成不一致性" class="headerlink" title="并发控制：正确调度并发操作，避免造成不一致性"></a>并发控制：正确调度并发操作，避免造成不一致性</h3><ul><li>封锁技术</li></ul><blockquote><p>写锁：其他事务不能读和写，也不能申请任何锁</p><p>读锁：其它事务可以读，可以再申请读锁</p></blockquote><ul><li><p>封锁协议：规定申请时间，持锁时长，释放时间</p><blockquote><p>一级协议：修改前必须加写锁，事务[^ 结束]后释放</p><p>[^ 结束]: commit OR rollback</p><img src="/2021/09/02/database/image-20210830164133066.png" alt="image-20210830164133066" style="zoom:150%;"></blockquote></li></ul><img src="/2021/09/02/database/image-20210830164904367.png" class title="image-20210830164904367"><ul><li><p>冲突操作：读-写，写-写</p><blockquote><img src="/2021/09/02/database/image-20210830165519335.png" alt="image-20210830165519335" style="zoom:50%;"></blockquote></li><li><p>冲突可串行化[前趋图画法](<a href="https://www.zhihu.com/zvideo/1312870360979509248">(13 封私信 / 19 条消息) 事务操作调度冲突可串行化的判断（通过前驱图） - 知乎 (zhihu.com)</a>)</p></li></ul><blockquote><ol><li>判断有几个事务</li></ol><img src="/2021/09/02/database/image-20210830175453768.png" class title="image-20210830175453768"><ol start="2"><li><p>自左向右，逐个判断是否存在冲突操作</p></li><li><p>以锚定事务为起点，形成冲突的操作为终点，得有向边</p></li></ol><p>（1）先判断第一个r2(A)，找到冲突操作R2(A)W3(A)，形成一条有向边</p><img src="/2021/09/02/database/image-20210830175614765.png" class title="image-20210830175614765"><p>（2）接着判断第二个<img src="/2021/09/02/database/image-20210830175827529.png" class title="image-20210830175827529"></p><p>（3）以此类推得到全部有向边<img src="/2021/09/02/database/image-20210830180010047.png" class title="image-20210830180010047"></p><ol start="4"><li>绘制前驱图(不用重复画)</li></ol><img src="/2021/09/02/database/image-20210830180222382.png" class title="image-20210830180222382"><ol start="5"><li>判断：前驱图存在回路，说明该调度是<strong>冲突不可串行化</strong>的</li></ol></blockquote><ul><li><p>两段锁协议：所有加锁放在第一个解锁之前</p><p>满足该协议的调度一定是可串行化的(正确的)，反之不成立。</p></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;写在&lt;a href=&quot;%E6%9C%AC%E7%AF%87%E5%8F%AA%E8%AE%B0%E5%BD%95%E4%B8%80%E4%BA%9B%E4%B8%AA%E4%BA%BA%E9%9C%80%E8%A6%81%E7%9A%84%E7%82%B9%EF%BC%8C%E4%B8%8D%E6%98%AF%E5%AE%8C%E6%95%B4%E7%9A%84%E7%9F%A5%E8%AF%86%E6%A1%86%E6%9E%B6&quot;&gt;^ 前面&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;并发控制&quot;&gt;&lt;a href=&quot;#并发控制&quot; class=&quot;headerlink&quot; title=&quot;并发控制&quot;&gt;&lt;/a&gt;并发控制&lt;/h1&gt;&lt;h3 id=&quot;并发可能导致的三种不一致状态&quot;&gt;&lt;a href=&quot;#并发可能导致的三种不一致状态&quot; class=&quot;headerlink&quot; title=&quot;并发可能导致的三种不一致状态&quot;&gt;&lt;/a&gt;并发可能导致的三种不一致状态&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;丢失修改&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;写-写&lt;/p&gt;
&lt;img src=&quot;/2021/09/02/database/image-20210830125324058.png&quot; class title=&quot;image-20210830125324058&quot;&gt;

&lt;p&gt;两个事务T2和T2读入同一数据并修改，T2的提交结果破坏了T1提交的结果，导致T1的修改被丢失&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;不可重复读&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;读-修改&lt;/p&gt;
&lt;img src=&quot;/2021/09/02/database/image-20210830125511047.png&quot; alt=&quot;image-20210830125511047&quot; style=&quot;zoom:50%;&quot;&gt;

&lt;p&gt;读-删除&lt;/p&gt;
&lt;img src=&quot;/2021/09/02/database/image-20210830125646645.png&quot; class title=&quot;image-20210830125646645&quot;&gt;

&lt;p&gt;读-插入&lt;/p&gt;
&lt;img src=&quot;/2021/09/02/database/image-20210830125659642.png&quot; class title=&quot;image-20210830125659642&quot;&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;读脏数据&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;修改-读&lt;/p&gt;
&lt;img src=&quot;/2021/09/02/database/image-20210830125759968.png&quot; class title=&quot;image-20210830125759968&quot;&gt;

&lt;img src=&quot;/2021/09/02/database/image-20210830162152749.png&quot; class title=&quot;image-20210830162152749&quot;&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;并发控制：正确调度并发操作，避免造成不一致性&quot;&gt;&lt;a href=&quot;#并发控制：正确调度并发操作，避免造成不一致性&quot; class=&quot;headerlink&quot; title=&quot;并发控制：正确调度并发操作，避免造成不一致性&quot;&gt;&lt;/a&gt;并发控制：正确调度并发操作，避免造成不一致性&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;封锁技术&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;写锁：其他事务不能读和写，也不能申请任何锁&lt;/p&gt;
&lt;p&gt;读锁：其它事务可以读，可以再申请读锁&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;封锁协议：规定申请时间，持锁时长，释放时间&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一级协议：修改前必须加写锁，事务[^ 结束]后释放&lt;/p&gt;
&lt;p&gt;[^ 结束]: commit OR rollback&lt;/p&gt;
&lt;img src=&quot;/2021/09/02/database/image-20210830164133066.png&quot; alt=&quot;image-20210830164133066&quot; style=&quot;zoom:150%;&quot;&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&quot;/2021/09/02/database/image-20210830164904367.png&quot; class title=&quot;image-20210830164904367&quot;&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;冲突操作：读-写，写-写&lt;/p&gt;
&lt;blockquote&gt;
&lt;img src=&quot;/2021/09/02/database/image-20210830165519335.png&quot; alt=&quot;image-20210830165519335&quot; style=&quot;zoom:50%;&quot;&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;冲突可串行化[前趋图画法](&lt;a href=&quot;https://www.zhihu.com/zvideo/1312870360979509248&quot;&gt;(13 封私信 / 19 条消息) 事务操作调度冲突可串行化的判断（通过前驱图） - 知乎 (zhihu.com)&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="数据库" scheme="https://heimdall-nss.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="数据库" scheme="https://heimdall-nss.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="暑期系列" scheme="https://heimdall-nss.github.io/tags/%E6%9A%91%E6%9C%9F%E7%B3%BB%E5%88%97/"/>
    
    <category term="专业课" scheme="https://heimdall-nss.github.io/tags/%E4%B8%93%E4%B8%9A%E8%AF%BE/"/>
    
  </entry>
  
  <entry>
    <title>hexo搭建博客记录</title>
    <link href="https://heimdall-nss.github.io/2021/09/02/blog/"/>
    <id>https://heimdall-nss.github.io/2021/09/02/blog/</id>
    <published>2021-09-02T09:19:12.000Z</published>
    <updated>2021-09-04T05:16:02.972Z</updated>
    
    <content type="html"><![CDATA[<p>今天有空上来换个主题，顺便完善下一些效果</p><hr><p>[^ hexo-Material]: 以下只记录一些问题, hexo的相关配置省略</p><h2 id="Theme-hexo-Material"><a href="#Theme-hexo-Material" class="headerlink" title="Theme: [^ hexo-Material]"></a>Theme: [^ hexo-Material]</h2><h4 id="来比力留言"><a href="#来比力留言" class="headerlink" title="来比力留言"></a>来比力留言</h4><p>“将data-uid后的代码复制，然后打开主题配置文件_config.yml，找到livere_uid，将代码复制到其后即可：”</p><pre><code class="text">livere_uid: "你的代码"</code></pre><p><sup>问</sup> 这里代码外有””吗？</p><ul><li><input checked disabled type="checkbox"> 傻了，人家说的是<code>data-uid</code>之后的代码</li></ul><h4 id="忽略要编译的文件"><a href="#忽略要编译的文件" class="headerlink" title="忽略要编译的文件"></a>忽略要编译的文件</h4><p>搜索引擎确认网站所有权时往往会提供一个html文件来进行验证，要是这个文件被渲染了，验证自然就会失败了。或者，有时候会有一些文件不希望Hexo渲染的，因此有必要针对某个文件或者目录进行排除。Hexo的配置文件中提供了配置项skip_render。只有source目录下的文件才会发布到public（能够在网络上访问到），因此Hexo只渲染source目录下的文件。skip_render参数设置的路径是相对于source目录的路径。</p><pre><code class="text">skip_render:   #部署时不包含的文件#单个文件skip_render: hello.html#单个文件夹下全部文件skip_render: test/* #单个文件夹下指定类型文件skip_render: test/*.md  #单个文件夹下全部文件以及子目录skip_render: test/**  #跳过多个目录，或者多个文件skip_render: ['*.html', demo/**, test/*]</code></pre><h4 id="发布博客文章"><a href="#发布博客文章" class="headerlink" title="发布博客文章"></a>发布博客文章</h4><p>1 修正图片显示问题</p><p>经过上面的配置后，发现上传的博客文章里面的本地图片居然显示不来（没有同步上传）。</p><p>于是，找到解决方案：</p><p>1 把主页配置文件<code>_config.yml</code> 里的<code>post_asset_folder:</code>这个选项设置为<code>true</code></p><p>2 在你的hexo目录下执行这样一句话<code>npm install hexo-asset-image --save</code>，这是下载安装一个可以上传本地图片的插件</p><p>3 等待一小段时间后，再运行<code>hexo n "xxxx"</code>来生成<code>md</code>博文时，<code>/source/_posts</code>文件夹内除了<code>xxxx.md</code>文件还有一个同名的文件夹</p><p>4 最后在xxxx.md中想引入图片时，先把图片复制到xxxx这个文件夹中，然后只需要在xxxx.md中按照markdown的格式引入图片：</p><pre><code class="text">  {% asset_img 图片名.jpg 你想输入的替代文字 %}</code></pre><p>注意： <code>xxxx</code>是这个md文件的名字，也是同名文件夹的名字。只需要有文件夹名字即可，不需要有什么绝对路径。你想引入的图片就只需要放入<code>xxxx</code>这个文件夹内就好了，很像引用相对路径。</p><h4 id="设置首页不显示全文"><a href="#设置首页不显示全文" class="headerlink" title="设置首页不显示全文"></a>设置首页不显示全文</h4><p>next7.8里默认就是不显示，都设置好了<br>material里只有一行代码也是默认<code>true</code>，但字数感觉不太对，记录在后面</p><h4 id="插入mermaid"><a href="#插入mermaid" class="headerlink" title="插入mermaid"></a>插入mermaid</h4><p><strong>Next</strong>下</p><blockquote><p>失败，rnm明明又是按照[原文档](<a href="https://github.com/webappdevelp/hexo-filter-mermaid-diagrams">webappdevelp/hexo-filter-mermaid-diagrams: mermaid diagrams for hexo (github.com)</a>)做的</p><ul><li><input checked disabled type="checkbox"> 已解决: 除了上述步骤，还需要在主题配置文件中把mermaid改成enable</li></ul></blockquote><p><strong>Material</strong>下</p><blockquote><ul><li><input disabled type="checkbox"> 待解决</li></ul></blockquote><h4 id="设置标签云和网易云音乐"><a href="#设置标签云和网易云音乐" class="headerlink" title="设置标签云和网易云音乐"></a>设置标签云和网易云音乐</h4><p>以下是在<strong>Next</strong>主题中的配置</p><pre><code>#npm安装标签云插件npm install hexo-tag-cloud@^2.0.* </code></pre><p>🤫在主题文件夹找到文件 <code>theme/next/layout/_macro/sidebar.swig</code>, 然后添加如下代码：</p><pre><code>  &lt;div class="site-overview-wrap sidebar-panel"&gt;    {{ partial('_partials/sidebar/site-overview.swig', {}, {cache: theme.cache.enable}) }}    {{- next_inject('sidebar') }}  &lt;/div&gt;  {%- if theme.back2top.enable and theme.back2top.sidebar %}    &lt;div class="back-to-top motion-element"&gt;      &lt;i class="fa fa-arrow-up"&gt;&lt;/i&gt;      &lt;span&gt;0%&lt;/span&gt;    &lt;/div&gt;  {%- endif %}####标签云代码 文章添加标签就可以显示出来    {%- if site.tags.length &gt; 1 %}      &lt;script type="text/javascript" charset="utf-8" src="{{ url_for('/js/tagcloud.js') }}"&gt;&lt;/script&gt;      &lt;script type="text/javascript" charset="utf-8" src="{{ url_for('/js/tagcanvas.js') }}"&gt;&lt;/script&gt;      &lt;div class="widget-wrap"&gt;        &lt;h3 class="widget-title"&gt;标签云&lt;/h3&gt;        &lt;div id="myCanvasContainer" class="widget tagcloud"&gt;          &lt;canvas width="250" height="250" id="resCanvas" style="width:100%"&gt;            {{ list_tags() }}          &lt;/canvas&gt;        &lt;/div&gt;      &lt;/div&gt;      ####网易云音乐代码 自动播放      &lt;iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&amp;id=1428534769&amp;auto=1&amp;height=66"&gt;&lt;/iframe&gt;    {%- endif %}&lt;/div&gt;</code></pre><ul><li><input checked disabled type="checkbox"> 问题：出现乱码？？<br>解决：按照<a href="https://github.com/D0n9X1n/hexo-tag-cloud/blob/master/README.ZH.md">官方</a>给的instruction重新配置</li></ul><h4 id="彩色标签页"><a href="#彩色标签页" class="headerlink" title="彩色标签页"></a>彩色标签页</h4><p>以下是在<strong>Next</strong>主题下的配置<br><strong>🤫</strong>在 /themes/next/layout/ 目录下，新增 tag-color.swig 文件，填入如下内容:**</p><pre><code>#直接覆盖掉源文件&lt;script type="text/javascript"&gt;     var alltags = document.getElementsByClassName('tag-cloud-tags');     var tags = alltags[0].getElementsByTagName('a');     for (var i = tags.length - 1; i &gt;= 0; i--) {       var r=Math.floor(Math.random()*75+130);       var g=Math.floor(Math.random()*75+100);       var b=Math.floor(Math.random()*75+80);       tags[i].style.background = "rgb("+r+","+g+","+b+")";     }&lt;/script&gt;&lt;style&gt;  .tag-cloud-tags{    /*font-family: Helvetica, Tahoma, Arial;*/    /*font-weight: 100;*/    text-align: center;    counter-reset: tags;  }  .tag-cloud-tags a{    border-radius: 6px;    padding-right: 5px;    padding-left: 5px;    margin: 8px 5px 0px 0px;  }  .tag-cloud-tags a:before{    content: "🔖";  }  .tag-cloud-tags a:hover{     box-shadow: 0px 5px 15px 0px rgba(0,0,0,.4);     transform: scale(1.1);     /*box-shadow: 10px 10px 15px 2px rgba(0,0,0,.12), 0 0 6px 0 rgba(104, 104, 105, 0.1);*/     transition-duration: 0.15s;  }&lt;/style&gt;</code></pre><p><strong>在同级目录的 page.swig 中引入 tag-color.swig</strong></p><pre><code>#找一下有没有相识的这一段，有的话覆盖掉，没有就粘贴上去  &lt;div class="tag-cloud"&gt;        &lt;!-- 目前共计xxx个标签        &lt;div class="tag-cloud-title"&gt;            {{ _p('counter.tag_cloud', site.tags.length) }}        &lt;/div&gt;        --&gt;            &lt;div class="tag-cloud-tags"&gt;          {{ tagcloud({min_font: 10, max_font: 15, amount: 300, color: true, start_color: '#ccc', end_color: '#111'}) }}        &lt;/div&gt;      &lt;/div&gt;    +     {% include 'tag-color.swig' %}        {% elif page.type === 'categories' %}      &lt;div class="category-all-page"&gt;        &lt;div class="category-all-title"&gt;            {{ _p('counter.categories', site.categories.length) }}        &lt;/div&gt;        &lt;div class="category-all"&gt;          {{ list_categories() }}        &lt;/div&gt;      &lt;/div&gt;</code></pre><p>以下是文章底部的标签样式（代码拷入 /themes/next/source/css/_schemes/(自己选择的主题)/index.styl 即可</p><pre><code>*文章底部标签样式*/.posts-expand .post-tags a {  -webkit-box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24);  -moz-box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24);  box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24);  font-family: 'Comic Sans MS', sans-serif;  transition: .2s ease-out;  padding: 3px 5px;  margin: 5px;  background: #f5f5f5;  border-bottom: none;  border-radius: 15px;  +mobile(){    padding: 1px 3px;    font-size: 8px;  }  &amp;:hover {    background: rgba(100,154,182,0.902);    color: #fff;    -webkit-box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);    -moz-box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);    box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);  }}</code></pre><p><sup>问</sup> 没效果？？</p><p>艹改了一圈又出问题，头好痛睡觉去了</p><hr><h4 id="关于更换material主题后在背景中出现的不明黑色图案"><a href="#关于更换material主题后在背景中出现的不明黑色图案" class="headerlink" title="关于更换material主题后在背景中出现的不明黑色图案"></a>关于更换material主题后在背景中出现的不明黑色图案</h4><p>就是说搞了一下午都没解决，重新查看了文档和之前参考的文章，不知道哪一步配置出错了，结果今早上我把之前安装的Next适配的插件卸载了就好了？？（卸载了hexo-cake-moon）</p><h4 id="最后一个问题，我发现material下的首页文章预览有点问题？"><a href="#最后一个问题，我发现material下的首页文章预览有点问题？" class="headerlink" title="最后一个问题，我发现material下的首页文章预览有点问题？"></a>最后一个问题，我发现material下的首页文章预览有点问题？</h4><p>设置的是显示20个字，然而并不起作用。。。</p><p>代码的字数不计算吗？？</p><ul><li><input disabled type="checkbox"> 待解决 </li></ul><h4 id="绑定域名后无法访问，看有人说等10min。。"><a href="#绑定域名后无法访问，看有人说等10min。。" class="headerlink" title="绑定域名后无法访问，看有人说等10min。。"></a>绑定域名后无法访问，看有人说等10min。。</h4><p>。。等待中</p><ul><li><input checked disabled type="checkbox"> 官方有给出[解决方案](<a href="https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site#configuring-an-apex-domain">Managing a custom domain for your GitHub Pages site - GitHub Docs</a>)【采用ping的方式不行，因为ip要变】</li></ul><p>省流提醒👉🏾下面四条都要解析到<code>A</code>记录</p><pre><code>185.199.108.153185.199.109.153185.199.110.153185.199.111.153</code></pre><h4 id="material中的标签云"><a href="#material中的标签云" class="headerlink" title="material中的标签云"></a>material中的标签云</h4><p>脚本都已经写好了，但貌似没什么动效？有时间研究下修改</p><h4 id="捏妈，为啥hexo-d之后又不能访问了。。"><a href="#捏妈，为啥hexo-d之后又不能访问了。。" class="headerlink" title="捏妈，为啥hexo d之后又不能访问了。。"></a>捏妈，为啥<code>hexo d</code>之后又不能访问了。。</h4><ul><li><input checked disabled type="checkbox"> 等一会就好了、。、</li></ul><h4 id="为啥手机端无法访问了又-刚配置好可以访问，不知道又按啥了。。"><a href="#为啥手机端无法访问了又-刚配置好可以访问，不知道又按啥了。。" class="headerlink" title="为啥手机端无法访问了又(刚配置好可以访问，不知道又按啥了。。)"></a>为啥手机端无法访问了又(刚配置好可以访问，不知道又按啥了。。)</h4><p>我好像只按了一个这个：先记录一下</p><ul><li><input checked disabled type="checkbox"> Enforce HTTPS </li></ul><p>HTTPS provides a layer of encryption that prevents others from snooping on or tampering with traffic to your site.<br>When HTTPS is enforced, your site will only be served over HTTPS. <a href="https://docs.github.com/articles/securing-your-github-pages-site-with-https">Learn more</a>.</p><hr><h2 id="关于优化访问速度的一些尝试"><a href="#关于优化访问速度的一些尝试" class="headerlink" title="关于优化访问速度的一些尝试"></a>关于优化访问速度的一些尝试</h2><h3 id="将GitHub-page托管到Vercel"><a href="#将GitHub-page托管到Vercel" class="headerlink" title="将GitHub page托管到Vercel"></a>将<code>GitHub page</code>托管到<code>Vercel</code></h3><ul><li><font color="green">Overview</font>标签下，点击<button>New Project</button></li><li>在左侧<strong>Import Git Repository</strong>里粘贴你仓库地址（也可以直接登陆你的github，然后项目全都会列出来选择即可）</li><li>之后部署即可(省略过程了)</li><li>以后更新仓库会自动同步(还有邮件提醒)</li></ul><h3 id="直接将博客推送到vercel上"><a href="#直接将博客推送到vercel上" class="headerlink" title="直接将博客推送到vercel上"></a>直接将博客推送到<code>vercel</code>上</h3><p>我们使用<code>npm</code>安装Vercel控制台客户端。</p><pre><code>npm install -g vercel</code></pre><p>Hexo自带了一个生成静态站点的功能，我们只需把Hexo博客生成静态站点然后就可以直接部署到Vercel。Vercel是可以自动识别根目录和子目录的<code>index.html</code>文件的。</p><pre><code>hexo g</code></pre><p>然后<code>cd</code>到博客的<code>public</code>目录。执行</p><pre><code>vercel</code></pre><p>第一次会提示你登录。输入你注册Vercel账号的邮箱地址，然后Vercel会给这个邮箱发一封邮件，控制台程序也会等待验证完成，打开这个邮件点击验证（VERIFY）按钮，点击之后就显示验证完成，控制台程序也会提示登录成功。</p><p>这时候再执行</p><pre><code>vercel --prod</code></pre><p>然后出现这些提示，按照提示操作！</p><p>如果需要自动化集成（也就是不用回答下列问题）的话，前面的命令也可以使用<code>vercel --prod --confirm</code>，但是这样的话项目名称会自动使用缺省值，<del>如果需要指定项目名称的话就需要在博客的<code>source</code>目录添加<code>vercel.json</code>文件，配置<code>name</code>属性：{ name”: “my-hexo-blog” }</del>尝试之后发现这样不太对而且会影响部署</p><pre><code>? Set up and deploy “/home/runner/no5972tk/my-hexo-blog”? [Y/n] # 选择发布到的位置 -&gt; 直接回车# 默认就是账户名，显示在提示下面# 可以在官网登录后访问这个地址查看：https://vercel.com/dashboardWhich scope do you want to deploy to?·[username]# 是否链接到一个存在的项目 -&gt; n? Link to existing project? [y/N]# 为项目命名，这里输入的项目名会反映在域名上? What’s your project’s name? (my-hexo-blog)# 选择代码的位置，当前代码位置就是根目录 -&gt; 直接回车? In which directory is your code located? ./</code></pre><p>最后显示</p><p><code>✅ Production : https://xxxxxx.vercel.app [copied to clipboard] [10s]</code></p><p>的时候就部署到Vercel上了，其中<code>xxxxxx</code>是项目名称。这个域名就是部署好的域名，从这个网址进去就可以访问博客了。</p><p>以后需要更新博客的话执行下列操作：</p><pre><code>hexo cl &amp;&amp; hexo g &amp;&amp; cd public &amp;&amp; vercel --prod --confirm &amp;&amp; cd ..</code></pre><h3 id="如何使用vercel的自定义域名"><a href="#如何使用vercel的自定义域名" class="headerlink" title="如何使用vercel的自定义域名"></a>如何使用<code>vercel</code>的自定义域名</h3><ul><li><p>点进你的博客项目</p></li><li><p>点击右上角<button>View Domains</button></p></li><li><p>注意这里既可以修改vercel提供的域名，也可以添加你自己购买的域名</p></li><li><p>点击<button>ADD</button>可以填写你自己的域名,然后它会提示你在DNS解析商那(比如我用的阿里云就去到对应的域名控制台)添加一条记录</p><pre><code>@ A 76.76.21.21</code></pre><p>配置完毕的效果如下：</p><ol><li>我自己购买的域名</li></ol><img src="/2021/09/02/blog/image-20210904121552630.png" alt="image-20210904121552630" style="zoom:50%;"><ol start="2"><li><p>修改了vercel提供的域名</p><img src="/2021/09/02/blog/image-20210904121657061.png" alt="image-20210904121657061" style="zoom:50%;"></li><li><p>点击二者都可以打开博客页面</p></li></ol></li></ul><h3 id="如何绑定自己购买的域名到vercel上-涉及github-page的域名解绑"><a href="#如何绑定自己购买的域名到vercel上-涉及github-page的域名解绑" class="headerlink" title="如何绑定自己购买的域名到vercel上(涉及github page的域名解绑)"></a>如何绑定自己购买的域名到<code>vercel</code>上(涉及<code>github page</code>的域名解绑)</h3><p>由于我们的目的是优化访问速度，原先我将自己都买的域名绑定了github page的域名，因此需要解绑</p><p>我做了以下的操作：</p><blockquote><ol><li>在DNS解析商那删除了之前添加的记录(目前就只有vercel一条)</li><li>删除github项目里的CNAME文件</li><li>去github page页面查看显示如下：<img src="/2021/09/02/blog/image-20210904122047953.png" alt="image-20210904122047953" style="zoom:50%;"><br>说明已经解绑了，点进链接可以打开，并且不会将域名解析成你购买的那个</li></ol></blockquote><p>提示：如果操作完不能打开，或者域名还绑定着github page，<font color="#087">清除浏览器缓存</font>[不过我发现清除之后，对github等网址的访问变慢好多，还有就是<strong>不要把其它的一些记录清除了</strong>，比如表单自动填写，密码填充等，这些还是非常方便的清除了挺麻烦的]</p><h3 id="配置中出现的问题"><a href="#配置中出现的问题" class="headerlink" title="配置中出现的问题"></a>配置中出现的问题</h3><ul><li><p>vercel绑定自己的域名后，还是打不开页面。。</p><blockquote><p>这个我等会过来看..</p><p>突然想起，之前看到一篇文导致我把DNS服务器修改了</p><img src="/2021/09/02/blog/image-20210904124736597.png" alt="image-20210904124736597" style="zoom:50%;"><p>但是我之后就没看到有说要这样做的(官方文档也没有提示)，所以我还是先换过来看啊可能</p><p>说是48小时内生效，但一会就好了(会有邮件提醒)</p><p>就是说真的不知道为撒。。我最新部署之后已经显示的是个人域名了还是不能访问，只能用vercel提供那个。。等服务器生效了再看看<img src="/2021/09/02/blog/image-20210904130959727.png" alt="image-20210904130959727" style="zoom:50%;"></p></blockquote></li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ol><li><p>原先我把博客部署在github上，绑定了个人域名可以进行访问</p></li><li><p>现在需要优化访问速度，于是找到另一个平台vercel</p></li><li><p>我第一次先将github项目直接导入进vercel，然后通过vercel提供的<a href="https://whatisay.vercel.app/">域名1</a>访问</p></li><li><p>第二次直接将我的hexo文件部署到vercel,同样可以通过vercel提供的<a href="https://babytoast.vercel.app/">域名2</a>访问(并且还可以修改名字)</p></li><li><p>为了用我<a href="http://babytoast.space/">自定义的域名</a>访问，我先解绑原先github的，然后新绑定在直接部署在vercel上的项目</p><p>因此目前可以访问的途径：</p><p>访问部署在github上的：</p><p>github page的原始域名：<a href="https://heimdall-nss.github.io/">https://heimdall-nss.github.io/</a></p><p>访问部署在vercel上的：</p><p><a href="https://whatisay.vercel.app/">whatisay.vercel.app</a></p><p><a href="https://babytoast.vercel.app/">babytoast.vercel.app</a><br><a href="http://babytoast.space/">babytoast.space</a></p></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;今天有空上来换个主题，顺便完善下一些效果&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;[^ hexo-Material]: 以下只记录一些问题, hexo的相关配置省略&lt;/p&gt;
&lt;h2 id=&quot;Theme-hexo-Material&quot;&gt;&lt;a href=&quot;#Theme-hexo-Material&quot; class=&quot;headerlink&quot; title=&quot;Theme: [^ hexo-Material]&quot;&gt;&lt;/a&gt;Theme: [^ hexo-Material]&lt;/h2&gt;&lt;h4 id=&quot;来比力留言&quot;&gt;&lt;a href=&quot;#来比力留言&quot; class=&quot;headerlink&quot; title=&quot;来比力留言&quot;&gt;&lt;/a&gt;来比力留言&lt;/h4&gt;&lt;p&gt;“将data-uid后的代码复制，然后打开主题配置文件_config.yml，找到livere_uid，将代码复制到其后即可：”&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;text&quot;&gt;livere_uid: &quot;你的代码&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;sup&gt;问&lt;/sup&gt; 这里代码外有””吗？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked disabled type=&quot;checkbox&quot;&gt; 傻了，人家说的是&lt;code&gt;data-uid&lt;/code&gt;之后的代码&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;忽略要编译的文件&quot;&gt;&lt;a href=&quot;#忽略要编译的文件&quot; class=&quot;headerlink&quot; title=&quot;忽略要编译的文件&quot;&gt;&lt;/a&gt;忽略要编译的文件&lt;/h4&gt;</summary>
    
    
    
    <category term="博客" scheme="https://heimdall-nss.github.io/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="搭建测试" scheme="https://heimdall-nss.github.io/tags/%E6%90%AD%E5%BB%BA%E6%B5%8B%E8%AF%95/"/>
    
    <category term="Material" scheme="https://heimdall-nss.github.io/tags/Material/"/>
    
  </entry>
  
  <entry>
    <title>测试用内容不重要</title>
    <link href="https://heimdall-nss.github.io/2021/08/23/test/"/>
    <id>https://heimdall-nss.github.io/2021/08/23/test/</id>
    <published>2021-08-23T02:49:50.000Z</published>
    <updated>2021-09-02T10:08:18.117Z</updated>
    
    <content type="html"><![CDATA[<p>用<code>hexo n xx</code>新建的post可以正常显示图片，但如果是自己直接拖拽过去一篇md，同样建立同名文件夹放图片就不行，目前只能采用第一种方式，然后把之前的md复制进去</p><p><img src="/2021/08/23/test/image-20210811155339260.png" alt="测试图片"></p><hr><p>关于首页预览的字数显示：</p><p>渲染的部分不算吗？？</p><p>以下是20个字符：一二三四五六七八九十九八七六五四三二一零</p><!-- more --><p>mathjax测试<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.602ex" xmlns="http://www.w3.org/2000/svg" width="25.832ex" height="5.018ex" role="img" focusable="false" viewbox="0 -1509.9 11417.6 2217.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mi" transform="translate(345,0)"><path data-c="210F" d="M182 599Q182 611 174 615T133 619Q118 619 114 621T109 630Q109 636 114 656T122 681Q125 685 202 688Q272 695 286 695Q304 695 304 684Q304 682 295 644T282 597Q282 592 360 592H399Q430 592 445 587T460 563Q460 552 451 541L442 535H266L251 468Q247 453 243 436T236 409T233 399Q233 395 244 404Q295 441 357 441Q405 441 445 417T485 333Q485 284 449 178T412 58T426 44Q447 44 466 68Q485 87 500 130L509 152H531H543Q562 152 562 144Q562 128 546 93T494 23T415 -13Q385 -13 359 3T322 44Q318 52 318 77Q318 99 352 196T386 337Q386 386 346 386Q318 386 286 370Q267 361 245 338T211 292Q207 287 193 235T162 113T138 21Q128 7 122 4Q105 -12 83 -12Q66 -12 54 -2T42 26L166 530Q166 534 161 534T129 535Q127 535 122 535T112 534Q74 534 74 562Q74 570 77 576T84 585T96 589T109 591T124 592T138 592L182 595V599Z"/></g><g data-mml-node="mfrac" transform="translate(907,0)"><g data-mml-node="mi" transform="translate(400.5,676)"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"/></g><g data-mml-node="mrow" transform="translate(220,-686)"><g data-mml-node="mi"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"/></g><g data-mml-node="mi" transform="translate(566,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"/></g></g><rect width="1127" height="60" x="120" y="220"/></g><g data-mml-node="mi" transform="translate(2274,0)"><path data-c="1D713" d="M161 441Q202 441 226 417T250 358Q250 338 218 252T187 127Q190 85 214 61Q235 43 257 37Q275 29 288 29H289L371 360Q455 691 456 692Q459 694 472 694Q492 694 492 687Q492 678 411 356Q329 28 329 27T335 26Q421 26 498 114T576 278Q576 302 568 319T550 343T532 361T524 384Q524 405 541 424T583 443Q602 443 618 425T634 366Q634 337 623 288T605 220Q573 125 492 57T329 -11H319L296 -104Q272 -198 272 -199Q270 -205 252 -205H239Q233 -199 233 -197Q233 -192 256 -102T279 -9Q272 -8 265 -8Q106 14 106 139Q106 174 139 264T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 299 34 333T82 404T161 441Z"/></g><g data-mml-node="mo" transform="translate(3202.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="mo" transform="translate(4258.6,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="mfrac" transform="translate(5036.6,0)"><g data-mml-node="msup" transform="translate(384.2,676)"><g data-mml-node="mi"><path data-c="210F" d="M182 599Q182 611 174 615T133 619Q118 619 114 621T109 630Q109 636 114 656T122 681Q125 685 202 688Q272 695 286 695Q304 695 304 684Q304 682 295 644T282 597Q282 592 360 592H399Q430 592 445 587T460 563Q460 552 451 541L442 535H266L251 468Q247 453 243 436T236 409T233 399Q233 395 244 404Q295 441 357 441Q405 441 445 417T485 333Q485 284 449 178T412 58T426 44Q447 44 466 68Q485 87 500 130L509 152H531H543Q562 152 562 144Q562 128 546 93T494 23T415 -13Q385 -13 359 3T322 44Q318 52 318 77Q318 99 352 196T386 337Q386 386 346 386Q318 386 286 370Q267 361 245 338T211 292Q207 287 193 235T162 113T138 21Q128 7 122 4Q105 -12 83 -12Q66 -12 54 -2T42 26L166 530Q166 534 161 534T129 535Q127 535 122 535T112 534Q74 534 74 562Q74 570 77 576T84 585T96 589T109 591T124 592T138 592L182 595V599Z"/></g><g data-mml-node="mn" transform="translate(646.1,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g><g data-mml-node="mrow" transform="translate(220,-686)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"/></g></g><rect width="1578" height="60" x="120" y="220"/></g><g data-mml-node="msup" transform="translate(6854.6,0)"><g data-mml-node="mi"><path data-c="2207" d="M46 676Q46 679 51 683H781Q786 679 786 676Q786 674 617 326T444 -26Q439 -33 416 -33T388 -26Q385 -22 216 326T46 676ZM697 596Q697 597 445 597T193 596Q195 591 319 336T445 80L697 596Z"/></g><g data-mml-node="mn" transform="translate(866,413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g><g data-mml-node="mi" transform="translate(8124.1,0)"><path data-c="1D713" d="M161 441Q202 441 226 417T250 358Q250 338 218 252T187 127Q190 85 214 61Q235 43 257 37Q275 29 288 29H289L371 360Q455 691 456 692Q459 694 472 694Q492 694 492 687Q492 678 411 356Q329 28 329 27T335 26Q421 26 498 114T576 278Q576 302 568 319T550 343T532 361T524 384Q524 405 541 424T583 443Q602 443 618 425T634 366Q634 337 623 288T605 220Q573 125 492 57T329 -11H319L296 -104Q272 -198 272 -199Q270 -205 252 -205H239Q233 -199 233 -197Q233 -192 256 -102T279 -9Q272 -8 265 -8Q106 14 106 139Q106 174 139 264T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 299 34 333T82 404T161 441Z"/></g><g data-mml-node="mo" transform="translate(8997.3,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="mi" transform="translate(9997.6,0)"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"/></g><g data-mml-node="mi" transform="translate(10766.6,0)"><path data-c="1D713" d="M161 441Q202 441 226 417T250 358Q250 338 218 252T187 127Q190 85 214 61Q235 43 257 37Q275 29 288 29H289L371 360Q455 691 456 692Q459 694 472 694Q492 694 492 687Q492 678 411 356Q329 28 329 27T335 26Q421 26 498 114T576 278Q576 302 568 319T550 343T532 361T524 384Q524 405 541 424T583 443Q602 443 618 425T634 366Q634 337 623 288T605 220Q573 125 492 57T329 -11H319L296 -104Q272 -198 272 -199Q270 -205 252 -205H239Q233 -199 233 -197Q233 -192 256 -102T279 -9Q272 -8 265 -8Q106 14 106 139Q106 174 139 264T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 299 34 333T82 404T161 441Z"/></g></g></g></svg></mjx-container><br>highlight测试</p><p>C++</p><pre><code class="c++">#include "stdafx.h"#include "myCalculator.h"#define MAX_LOADSTRING 100// 全局变量:HINSTANCE hInst;                                // 当前实例WCHAR szTitle[MAX_LOADSTRING];                  // 标题栏文本WCHAR szWindowClass[MAX_LOADSTRING];            // 主窗口类名</code></pre><p>python</p><pre><code class="python">import torch.nn.functional as Fimport torch.optim as optimimport matplotlib.pyplot as pltimport numpy as npimport sys#from pylab import *# --------------------准备数据集------------------# Dataset, DataLoadertransform = transforms.Compose(    [transforms.ToTensor(),     transforms.Normalize((0.5, 0.5, 0.5), std =(0.5, 0.5, 0.5))])trainset = torchvision.datasets.CIFAR10(root='./data', train=True,                                        download=True, transform=transform)testset = torchvision.datasets.CIFAR10(root='./data',train=False,                                       transform=transform, download=True)# 4张图为1份trainloader = DataLoader(dataset=trainset, batch_size=4, shuffle=True, num_workers=0)testloader = DataLoader(dataset=testset, batch_size=4, shuffle=True, num_workers=0)classes = ('plane', 'car', 'bird', 'cat', 'deer', 'dog', 'frog', 'horse', 'ship', 'truck')#dataiter = iter(trainloader)images, labels = dataiter.next()def imshow(img):   img = img /2+0.5     # 非标准的（unnormalized）   npimg = img.numpy() </code></pre>]]></content>
    
    
    <summary type="html">写在front-matter的`excerpt`后的文字是预览的内容</summary>
    
    
    
    <category term="博客" scheme="https://heimdall-nss.github.io/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="搭建测试" scheme="https://heimdall-nss.github.io/tags/%E6%90%AD%E5%BB%BA%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>暑期系列：计算机组成原理</title>
    <link href="https://heimdall-nss.github.io/2021/08/11/computer%20consistency/"/>
    <id>https://heimdall-nss.github.io/2021/08/11/computer%20consistency/</id>
    <published>2021-08-11T12:08:16.000Z</published>
    <updated>2021-09-02T09:47:34.196Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-计算机系统简介"><a href="#1-计算机系统简介" class="headerlink" title="1 计算机系统简介"></a>1 计算机系统简介</h2><ul><li><p>硬件：主机、外设等</p></li><li><p>软件：程序</p><img src="/2021/08/11/computer%20consistency/image-20210809162200577.png" alt="image-20210809162200577" style="zoom:50%;"></li></ul><h2 id="2-计算机基本组成"><a href="#2-计算机基本组成" class="headerlink" title="2 计算机基本组成"></a>2 计算机基本组成</h2><pre class="mermaid">graph LRA[运算器] --&gt;B(CPU)C[控制器] --&gt;BB --&gt;ED[存储器] --&gt;E(主机)F[输入设备] --&gt;H(I/O设备)G[输出设备] --&gt;Hstyle A fill:#ccfstyle C fill:#ccfstyle D fill:#ccfstyle F fill:#ccfstyle G fill:#ccf</pre><img src="/2021/08/11/computer%20consistency/image-20210809164028137.png" alt="image-20210809164028137" style="zoom:50%;"><p>一条指令[操作码|地址码]的完成过程：</p><ul><li><p>取指令：从MAR–&gt;IR (<font color="greee">PC</font> 指向下一条指令的地址)</p></li><li><p>指令译码：ID获取指令类别和操作数</p></li><li><p>指令执行：</p></li><li><p>访存取数：根据指令地址码访问主存取到对应操作数</p></li><li><p>结果写回：CPU内部寄存器 || 主存..</p></li></ul><h2 id="3-计算机硬件主要技术指标"><a href="#3-计算机硬件主要技术指标" class="headerlink" title="3 计算机硬件主要技术指标"></a>3 计算机硬件主要技术指标</h2><ul><li>机器字长：CPU一次能处理的数据位数(取决于CPU寄存器位数)</li><li>运算速度<blockquote><p>CPI 执行一条指令所需时钟周期数<br>MIPS 每秒执行百万条指令<br>FLOPS 每秒浮点运算次数</p></blockquote></li><li>主存容量(内存)<blockquote><p>64K × 32位 ：MAR 16个 存储字长32位<br>1KB = 2 <sup>13</sup> b</p></blockquote></li><li>辅存容量(外存) ：1GB = 2 <sup>30</sup> B 、1B = 8b（bit）</li></ul><h2 id="4-存储器"><a href="#4-存储器" class="headerlink" title="4 存储器"></a>4 存储器</h2><h4 id="层级"><a href="#层级" class="headerlink" title="层级"></a>层级</h4><img src="/2021/08/11/computer%20consistency/image-20210811163455754.png" alt="image-20210811163455754" style="zoom:80%;"><h4 id="主存储器"><a href="#主存储器" class="headerlink" title="主存储器"></a>主存储器</h4><ol><li><p>与CPU通过总线直接相连<img src="/2021/08/11/computer%20consistency/image-20210811163634876.png" alt="image-20210811163634876" style="zoom:30%;"></p></li><li><p>CPU与主存的读写过程</p><ol><li><p>读出：CPU将该字地址送至MAR经地址总线送至主存–&gt;发读命令–&gt;主存读出内容后送至数据总线上由MDR送至目的地</p></li><li><p>存入：CPU将该字地址送至MAR经地址总线，将字送入MDR—&gt;发写命令–&gt;主存将数据总线上信息写入对应地址</p></li></ol></li><li><p>技术指标</p><blockquote><p>存储容量：存在二进制代码的总位数</p><p>存取时间：访问时间(读出时间或写入时间)</p><p>存取周期：进行连续两次存储器操作所需最小间隔时间</p><p>带宽：每秒从存储器进出信息的最大数量 [b/s 字节/s]</p></blockquote></li></ol><blockquote><p>…</p></blockquote><h2 id="5-I-O系统"><a href="#5-I-O系统" class="headerlink" title="5 I/O系统"></a>5 I/O系统</h2><ul><li><p>发展过程</p><blockquote><p>CPU与I/O串行：程序查询方式</p><p>CPU…并行：中断 | DMA</p><p>通道结构</p><p>I/O处理机</p></blockquote></li><li><p>I/O接口</p><img src="/2021/08/11/computer%20consistency/image-20210810121018260.png" alt="image-20210810121018260" style="zoom:80%;"><ul><li><p>设置原因：</p><blockquote><p>选择设备</p><p>实现数据缓冲(匹配速度)</p><p>串并转换</p><p>电平转换</p><p>传输控制命令</p><p>反映设备状态(”忙“”就绪“”中断请求“)</p></blockquote></li></ul></li><li><p>程序查询方式<img src="/2021/08/11/computer%20consistency/image-20210810121310702.png" alt="image-20210810121310702" style="zoom:50%;"></p></li><li><p>中断方式</p><blockquote><p>保护现场[出栈]</p><p>中断服务</p><p>恢复现场[进栈]</p><p>中断返回</p></blockquote></li><li><p>DMA方式<img src="/2021/08/11/computer%20consistency/image-20210810121731326.png" alt="image-20210810121731326" style="zoom:80%;"></p></li></ul><h2 id="6-计算机的运算方法"><a href="#6-计算机的运算方法" class="headerlink" title="6 计算机的运算方法"></a>6 计算机的运算方法</h2><blockquote><p>原码</p><p>补码：正数与其原码相同 | 负数是原码除符号位外取反加一</p><p>反码：原码除符号位外取反</p><p><font color="red">移码</font>：与补码符号位相反<img src="/2021/08/11/computer%20consistency/image-20210810122335503.png" alt="image-20210810122335503" style="zoom:50%;"></p></blockquote><ul><li>定点表示：小数点位置不变</li></ul><blockquote><p>定点数x=xnxn-1…x2x1 [xn为符号位]</p><p>若X为纯小数：小数点位于xn与xn-1之间 </p><p>若X为纯整数：小数点位于x1的右边</p></blockquote><ul><li><p>浮点表示：任意二进制数N = 2^e.M<img src="/2021/08/11/computer%20consistency/image-20210810150919742.png" alt="image-20210810150919742" style="zoom:50%;"></p></li><li><p>相关运算</p><blockquote><p><font color="greee">乘法</font>：靠一些移位和加减🚬</p><p>[但是我感觉第二步就是一般整数乘法的算法就ok？]</p><img src="/2021/08/11/computer%20consistency/image-20210810151735175.png" alt="image-20210810151735175" style="zoom:50%;"></blockquote></li></ul><blockquote><p><font color="greee">除法</font>：加减交替法</p><img src="/2021/08/11/computer%20consistency/image-20210810160616306.png" alt="image-20210810160616306" style="zoom:30%;"><p>结果为负数[11 1110] –&gt; 商0、下一步 +Y、余数左移[11 1100]</p><p>结果为正数[00 1001] –&gt; 商1、下一步 -Y、余数左移[01 0010]</p><p>结果为正数[00 0101] –&gt; 商1、下一步 -Y、余数左移[00 1010]</p><p>结果为负数[11 1101] –&gt; 商0、下一步 +Y、余数左移[11 1010]</p><p>结果为正数[00 0111] –&gt; 商1 –&gt; 最终商：01101 余数：00 0111(0.0111)</p><p>结果：0.0111 * 2<sup>-4</sup> + 0.1101</p></blockquote><blockquote><p><font color="greee">浮点数加减</font>：🚬🚬🚬<img src="/2021/08/11/computer%20consistency/image-20210810162244763.png" alt="image-20210810162244763" style="zoom:80%;"></p><ol><li><p>对阶：小向大看齐<img src="/2021/08/11/computer%20consistency/image-20210810162550317.png" alt="image-20210810162550317" style="zoom:150%;"></p><img src="/2021/08/11/computer%20consistency/image-20210810162635081.png" alt="image-20210810162635081" style="zoom:150%;"></li><li><p>尾数相加<img src="/2021/08/11/computer%20consistency/image-20210810162729690.png" alt="image-20210810162729690" style="zoom:40%;"></p></li><li><p>结果规格化</p><blockquote><p>溢出[双符号位不相等]：右归-&gt;小数点左移 若没给出双符号位，则不会溢出</p><p>未溢出：左归直到是<img src="/2021/08/11/computer%20consistency/image-20210810163050894.png" alt="image-20210810163050894" style="zoom:40%;"></p><img src="/2021/08/11/computer%20consistency/image-20210810164422809.png" alt="image-20210810164422809" style="zoom:150%;"></blockquote></li><li><p>舍入处理：丢弃最高位0舍1入<img src="/2021/08/11/computer%20consistency/image-20210810164709244.png" alt="image-20210810164709244" style="zoom:43%;"></p></li><li><p>阶码溢出判断<img src="/2021/08/11/computer%20consistency/image-20210810164824784.png" alt="image-20210810164824784" style="zoom:80%;"></p> <img src="/2021/08/11/computer%20consistency/image-20210810165907725.png" alt="image-20210810165907725" style="zoom:80%;"></li></ol><p>  [补码–&gt;原码：除符号位减1再取反]</p></blockquote><h2 id="7-指令系统-详见"><a href="#7-指令系统-详见" class="headerlink" title="7 指令系统^ 详见"></a>7 指令系统<a href="OneNote%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86%E7%AB%A0%E8%8A%82%22%E6%8C%87%E4%BB%A4%E4%B8%8E%E5%AF%BB%E5%9D%80%22">^ 详见</a></h2><ul><li><p>机器指令</p></li><li><p>操作类型|操作数</p></li><li><p>寻址方式</p></li></ul><h2 id="8-CPU"><a href="#8-CPU" class="headerlink" title="8 CPU"></a>8 CPU</h2><ul><li><p>CPU结构<img src="/2021/08/11/computer%20consistency/image-20210811154301863.png" alt="image-20210811154301863" style="zoom:80%;"></p><p>寄存器种类</p><blockquote><p>通用寄存器：存放操作数</p><p>数据寄存器：存放操作数</p><p>地址寄存器：存放地址</p><p>条件码寄存器：存在条件码</p></blockquote></li><li><p>指令周期：取出并执行一条指令所需的全部时间</p></li><li><p>指令流水<img src="/2021/08/11/computer%20consistency/image-20210811155328449.png" alt="image-20210811155328449" style="zoom:80%;"><br>![测试用](./computer consistency/image-20210811155339260.png)</p></li></ul><ul><li><p>中断系统</p><ol><li><p>引起中断的因素</p><blockquote><p>人为设置中断</p><p>程序性事故(溢出、除法非法、操作码无法识别)</p><p>硬件故障</p><p>I/O设备</p><p>外部事件(键盘 。。)</p></blockquote></li><li><p>中断过程<a href="OneNote%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86%E7%AB%A0%E8%8A%82%22%E6%8C%87%E4%BB%A4%E4%B8%8E%E5%AF%BB%E5%9D%80%22">^ 详见</a><br>[^ ]：OneNote微机原理-中断</p><blockquote><p><font color="greee">中断请求</font>: 中断请求信号 –&gt;CPU INTR口</p><p><font color="greee">中断源识别</font>: 中断类型号 –&gt;高优先级先，同优先级按FCFS，低可被高打断</p><p><font color="greee">中断响应</font>：</p><ol><li>一条指令的最后一个时钟周期CPU检测INTR信号</li><li>向中断源发出INTA中断响应信号</li><li>断点保护（入栈）</li><li>获取中断服务程序首地址：【查询<strong>中断向量表：中断类型号|中断服务程序的入口地址</strong>】</li></ol><p><font color="greee">中断服务</font></p><ol><li>保护现场</li><li>中断服务</li><li>恢复现场</li><li>中断返回</li></ol><p><font color="greee">中断返回</font>：弹出堆栈中断点信息</p></blockquote></li></ol></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;1-计算机系统简介&quot;&gt;&lt;a href=&quot;#1-计算机系统简介&quot; class=&quot;headerlink&quot; title=&quot;1 计算机系统简介&quot;&gt;&lt;/a&gt;1 计算机系统简介&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;硬件：主机、外设等&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;软件：程序&lt;/p&gt;
&lt;img src=&quot;/2021/08/11/computer%20consistency/image-20210809162200577.png&quot; alt=&quot;image-20210809162200577&quot; style=&quot;zoom:50%;&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;2-计算机基本组成&quot;&gt;&lt;a href=&quot;#2-计算机基本组成&quot; class=&quot;headerlink&quot; title=&quot;2 计算机基本组成&quot;&gt;&lt;/a&gt;2 计算机基本组成&lt;/h2&gt;&lt;pre class=&quot;mermaid&quot;&gt;graph LR
A[运算器] --&amp;gt;B(CPU)
C[控制器] --&amp;gt;B
B --&amp;gt;E
D[存储器] --&amp;gt;E(主机)
F[输入设备] --&amp;gt;H(I/O设备)
G[输出设备] --&amp;gt;H
style A fill:#ccf
style C fill:#ccf
style D fill:#ccf
style F fill:#ccf
style G fill:#ccf&lt;/pre&gt;
&lt;img src=&quot;/2021/08/11/computer%20consistency/image-20210809164028137.png&quot; alt=&quot;image-20210809164028137&quot; style=&quot;zoom:50%;&quot;&gt;

&lt;p&gt;一条指令[操作码|地址码]的完成过程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;取指令：从MAR–&amp;gt;IR (&lt;font color=&quot;greee&quot;&gt;PC&lt;/font&gt; 指向下一条指令的地址)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;指令译码：ID获取指令类别和操作数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;指令执行：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;访存取数：根据指令地址码访问主存取到对应操作数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;结果写回：CPU内部寄存器 || 主存..&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;3-计算机硬件主要技术指标&quot;&gt;&lt;a href=&quot;#3-计算机硬件主要技术指标&quot; class=&quot;headerlink&quot; title=&quot;3 计算机硬件主要技术指标&quot;&gt;&lt;/a&gt;3 计算机硬件主要技术指标&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;机器字长：CPU一次能处理的数据位数(取决于CPU寄存器位数)&lt;/li&gt;
&lt;li&gt;运算速度&lt;blockquote&gt;
&lt;p&gt;CPI 执行一条指令所需时钟周期数&lt;br&gt;MIPS 每秒执行百万条指令&lt;br&gt;FLOPS 每秒浮点运算次数&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;主存容量(内存)&lt;blockquote&gt;
&lt;p&gt;64K × 32位 ：MAR 16个 存储字长32位&lt;br&gt;1KB = 2 &lt;sup&gt;13&lt;/sup&gt; b&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;辅存容量(外存) ：1GB = 2 &lt;sup&gt;30&lt;/sup&gt; B 、1B = 8b（bit）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;4-存储器&quot;&gt;&lt;a href=&quot;#4-存储器&quot; class=&quot;headerlink&quot; title=&quot;4 存储器&quot;&gt;&lt;/a&gt;4 存储器&lt;/h2&gt;</summary>
    
    
    
    <category term="计算机组成原理" scheme="https://heimdall-nss.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    
    <category term="暑期系列" scheme="https://heimdall-nss.github.io/tags/%E6%9A%91%E6%9C%9F%E7%B3%BB%E5%88%97/"/>
    
    <category term="专业课" scheme="https://heimdall-nss.github.io/tags/%E4%B8%93%E4%B8%9A%E8%AF%BE/"/>
    
    <category term="计组" scheme="https://heimdall-nss.github.io/tags/%E8%AE%A1%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://heimdall-nss.github.io/2021/07/18/hello-world/"/>
    <id>https://heimdall-nss.github.io/2021/07/18/hello-world/</id>
    <published>2021-07-18T09:23:14.511Z</published>
    <updated>2021-08-22T02:09:31.648Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ hexo new &amp;quot;My New Post&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ hexo server
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ hexo generate
&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
